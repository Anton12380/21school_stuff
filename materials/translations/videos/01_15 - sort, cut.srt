1
00:00:06,319 --> 00:00:08,824
Now that we've seen how redirections work.

2
00:00:08,844 --> 00:00:10,583
We can use this system

3
00:00:10,583 --> 00:00:12,849
to keep on handling our files.

4
00:00:13,839 --> 00:00:16,078
Let's have a look at a very simple command

5
00:00:16,080 --> 00:00:22,800
called "sort". It'll allow you to sort what you're giving it as arguments.

6
00:00:23,061 --> 00:00:24,630
So in this case,

7
00:00:24,640 --> 00:00:26,770
what you write on the standard input.

8
00:00:26,770 --> 00:00:29,087
So here we can see it's sorted all users

9
00:00:29,087 --> 00:00:31,279
alphabetically.

10
00:00:33,989 --> 00:00:37,480
Be careful, this is a sorting that we call

11
00:00:37,480 --> 00:00:39,101
"lexicographic", which means

12
00:00:39,101 --> 00:00:44,751
it's based on ASCII's characters sorting, so uppercases are before lowercases

13
00:00:46,601 --> 00:00:51,380
To... not have this behavior, you've got options to sort numbers...

14
00:00:51,380 --> 00:00:56,010
There are also options to sort in reverse. Do a "man sort",

15
00:00:56,010 --> 00:00:59,709
and check out all of its options.

16
00:01:01,950 --> 00:01:09,200
Once you've sorted your output, you'll be able to retrieve just the

17
00:01:09,200 --> 00:01:11,619
first names, for example.

18
00:01:11,619 --> 00:01:16,429
In order to do that, you'll need the "cut" command, which will allow you to

19
00:01:16,433 --> 00:01:19,012
cut each line depending on a delimiter.

20
00:01:19,012 --> 00:01:25,762
So for example, if I "cut" with the option "-d" on a delimiter, I'll be able to

21
00:01:25,762 --> 00:01:30,461
retrieve the fields I've chosen, and if I only want the first fields,

22
00:01:30,461 --> 00:01:33,351
I'll just have to add "-f" with "1".

23
00:01:34,431 --> 00:01:36,780
As we've seen earlier on,

24
00:01:36,780 --> 00:01:41,132
If I add "cat -e" to display non-printable characters

25
00:01:41,884 --> 00:01:45,743
I can see that there's a space after "maxime" here.

26
00:01:45,743 --> 00:01:48,713
Something I wouldn't have noticed without "cat -e".

27
00:01:51,514 --> 00:01:56,523
The "cut" command is very powerful. It'll allow you to do many things.

28
00:01:56,523 --> 00:02:06,073
For example, retrieve multiple fields. You may also do a field sort.

29
00:02:06,823 --> 00:02:11,262
That should be quite practical to retrieve only infos that are important to you ...

30
00:02:11,262 --> 00:02:16,442
in files like this, that'll be separated by the same delimiter (dot, comma, etc...)

31
00:02:17,422 --> 00:02:19,971
Once you've managed to get this result,

32
00:02:21,051 --> 00:02:27,991
let's say we keep those first names, we'll be able to modify them.

33
00:02:28,001 --> 00:02:37,880
For example, if I want to change "thomas" by "Thomas"

34
00:02:39,420 --> 00:02:43,420
I can use the "sed" command, which is a very, very powerful command

35
00:02:43,420 --> 00:02:46,479
which allows you to make modifications on data flow.

36
00:02:46,479 --> 00:02:52,528
For example you can ask it to turn "thomas" into "Thomas".

37
00:02:57,479 --> 00:03:02,020
As we can see here, "Thomas" starts with a capital letter.

38
00:03:02,039 --> 00:03:05,559
So what does it do? The first character, the "s"

39
00:03:05,849 --> 00:03:07,939
means we're going to "substitute".

40
00:03:07,939 --> 00:03:12,759
meaning we're going to replace our 2nd parameter by our 3rd parameter.

41
00:03:12,889 --> 00:03:13,979
It's really simple.

42
00:03:14,369 --> 00:03:17,839
This is basic "sed" functionalities.

43
00:03:17,839 --> 00:03:22,619
However, we can do much more. I'll let you check it out for yourselves.

44
00:03:22,619 --> 00:03:25,529
Go have a look at examples on the internet.

45
00:03:26,569 --> 00:03:34,642
You can also do "one out of two" modifications. We call those "regex".

46
00:03:34,762 --> 00:03:43,619
"regex" are on "patterns", which also are very powerful if you know how to use them.

47
00:03:44,249 --> 00:03:49,109
The last file-modification command that we'll see,

48
00:03:49,109 --> 00:03:51,749
is called "tr"

49
00:03:53,149 --> 00:03:55,989
For example, here we can see the accent in "mÃ©lanie".

50
00:03:58,729 --> 00:04:06,189
I want to replace it by a normal "e"... "tr" is very simple: it takes 2 arguments,

51
00:04:06,769 --> 00:04:12,739
a character and the one we're replacing it with.

52
00:04:13,159 --> 00:04:18,689
For example, if we use an "x" to replace the lowercase one in "xavier"...

53
00:04:20,679 --> 00:04:22,329
It works.

54
00:04:22,889 --> 00:04:26,029
All those commands are pretty basic. Once again, check out their "man".

55
00:04:26,029 --> 00:04:34,059
Check out the internet and test them out for yourselves to learn how they work.
