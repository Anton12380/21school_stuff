1
00:00:06,004 --> 00:00:08,634
Hello everyone, and welcome to this lesson

2
00:00:08,634 --> 00:00:10,494
about pointers to function.

3
00:00:10,494 --> 00:00:13,724
Recently, you've discovered the notion of pointers, and

4
00:00:13,724 --> 00:00:16,764
you've used it to store variables, addresses,

5
00:00:16,764 --> 00:00:19,734
Let's go back over it quickly, to make sure we know

6
00:00:19,734 --> 00:00:21,324
what we're talking about.

7
00:00:21,324 --> 00:00:24,624
Remember we could, for example, declare a variable,

8
00:00:24,624 --> 00:00:28,754
in the following manner: "int x", which will define a variable of type int,

9
00:00:28,754 --> 00:00:30,234
called "x".

10
00:00:30,234 --> 00:00:33,384
We've also seen that we could declare variables with

11
00:00:33,384 --> 00:00:37,384
another variable's address as a type : with pointers.

12
00:00:39,722 --> 00:00:42,682
A variable that has an int's address.

13
00:00:42,682 --> 00:00:45,902
For example, "y" would be declared as follows:

14
00:00:45,902 --> 00:00:51,282
So here, we have a variable "x" of type "int", and a pointer to int "y".

15
00:00:51,903 --> 00:00:55,413
We had the possibility to give a value to "x",

16
00:00:55,413 --> 00:01:00,743
for example "42", and then reference the address of "x" in "y",

17
00:01:00,743 --> 00:01:05,793
by writing "y = &x" (the address of "x").

18
00:01:07,113 --> 00:01:10,153
Those are syntaxes you know well.

19
00:01:10,153 --> 00:01:12,333
And you get the idea.

20
00:01:12,333 --> 00:01:14,953
Now that we have the address of "x" in our "y",

21
00:01:14,953 --> 00:01:18,403
we'll be able to use the value of "x", by using "y".

22
00:01:18,403 --> 00:01:22,403
For this, we have to dereference "y" with the operator " * ", which is

23
00:01:22,403 --> 00:01:26,403
the dereferencing operator, and assign a new value to "x".

24
00:01:26,403 --> 00:01:27,703
For example, 0.

25
00:01:27,703 --> 00:01:31,703
So here, "y"'s content (the dereferenced address of "x"),

26
00:01:32,284 --> 00:01:34,534
is worth 0, and not 42 anymore.

27
00:01:37,365 --> 00:01:41,085
Today we'll discover that we can reference the address of a function,

28
00:01:41,085 --> 00:01:43,655
in a pointer.

29
00:01:43,655 --> 00:01:46,195
That's what we call pointers to functions.

30
00:01:46,195 --> 00:01:49,095
See you in a moment to discover the syntax for these

31
00:01:49,095 --> 00:01:50,315
pointers to functions.

